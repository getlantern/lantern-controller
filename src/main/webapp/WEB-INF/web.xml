<?xml version="1.0" encoding="utf-8" standalone="no"?><web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.5" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <servlet>
    <servlet-name>Lantern_controller_java</servlet-name>
    <servlet-class>org.lantern.Lantern_controller_javaServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Lantern_controller_java</servlet-name>
    <url-pattern>/lantern_controller_java</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>sqsChecker</servlet-name>
    <servlet-class>org.lantern.SQSChecker</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>sqsChecker</servlet-name>
    <url-pattern>/check_sqs</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>xmppreceiver</servlet-name>
    <servlet-class>org.lantern.XmppReceiverServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>xmppreceiver</servlet-name>
    <url-pattern>/_ah/xmpp/message/chat/</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>available</servlet-name>
    <servlet-class>org.lantern.XmppAvailableServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>probe</servlet-name>
    <servlet-class>org.lantern.XmppProbeServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>available</servlet-name>
    <url-pattern>/_ah/xmpp/presence/available/</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>available</servlet-name>
    <url-pattern>/_ah/xmpp/presence/unavailable/</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>probe</servlet-name>
    <url-pattern>/_ah/xmpp/presence/probe/</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>subscribe</servlet-name>
    <servlet-class>org.lantern.XmppSubscribeServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>subscribe</servlet-name>
    <url-pattern>/_ah/xmpp/subscription/subscribe/</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>sendInviteTask</servlet-name>
    <servlet-class>org.lantern.SendInviteTask</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>sendInviteTask</servlet-name>
    <url-pattern>/send_invite_task</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>portUsersTask</servlet-name>
    <servlet-class>org.lantern.PortUsersTask</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>portUsersTask</servlet-name>
    <url-pattern>/port_users_task</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>uploadConfigAndSendInvite</servlet-name>
    <servlet-class>org.lantern.UploadConfigAndSendInvite</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>uploadConfigAndSendInvite</servlet-name>
    <url-pattern>/upload_config_and_send_invite</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>sendUpdateTask</servlet-name>
    <servlet-class>org.lantern.SendUpdateTask</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>sendUpdateTask</servlet-name>
    <url-pattern>/send_update_task</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>maintenanceTask</servlet-name>
    <servlet-class>org.lantern.MaintenanceTask</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>maintenanceTask</servlet-name>
    <url-pattern>/maintenance_task</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>exportBaselineStats</servlet-name>
    <servlet-class>org.lantern.ExportBaselineStats</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>exportBaselineStats</servlet-name>
    <url-pattern>/exportBaselineStats</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>increaseUntrustedInvites</servlet-name>
    <servlet-class>org.lantern.IncreaseUntrustedInvites</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>increaseUntrustedInvites</servlet-name>
    <url-pattern>/increaseUntrustedInvites</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>recalculateFriendingQuota</servlet-name>
    <servlet-class>org.lantern.RecalculateFriendingQuota</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>recalculateFriendingQuota</servlet-name>
    <url-pattern>/recalculateFriendingQuota</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>subscribed</servlet-name>
    <servlet-class>org.lantern.XmppSubscribedServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>subscribed</servlet-name>
    <url-pattern>/_ah/xmpp/subscription/subscribed/</url-pattern>
  </servlet-mapping>
  
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

  <servlet>
    <display-name>Remote API Servlet</display-name>
    <servlet-name>RemoteApiServlet</servlet-name>
    <servlet-class>com.google.apphosting.utils.remoteapi.RemoteApiServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet>
    <display-name>Admin Servlet</display-name>
    <servlet-name>AdminServlet</servlet-name>
    <servlet-class>org.lantern.AdminServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>Jersey REST Service</servlet-name>
    <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
    <init-param>
      <param-name>com.sun.jersey.config.feature.DisableWADL</param-name>
      <param-value>true</param-value>
    </init-param>
    <!--
    Please try to declare your resource classes statically in your Application implementation as
    follows in order to minimize the startup time of your application.
    -->
    <init-param>
      <param-name>javax.ws.rs.Application</param-name>
      <param-value>org.lantern.admin.rest.LanternAdminApplication</param-value>
    </init-param>
    <init-param>
        <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
        <param-value>true</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Jersey REST Service</servlet-name>
    <url-pattern>/admin/rest/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>RemoteApiServlet</servlet-name>
    <url-pattern>/remote_api</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AdminServlet</servlet-name>
    <url-pattern>/admin/post/*</url-pattern>
  </servlet-mapping>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Admin only</web-resource-name>
      <url-pattern>/persist/*</url-pattern>
      <url-pattern>/check_sqs</url-pattern>
      <url-pattern>/admin/*</url-pattern>
      <url-pattern>/send_invite_task</url-pattern>
      <url-pattern>/port_users_task</url-pattern>
      <url-pattern>/upload_config_and_send_invite</url-pattern>
      <url-pattern>/send_update_task</url-pattern>
      <url-pattern>/maintenance_task</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>admin</role-name>
    </auth-constraint>
    <user-data-constraint>
      <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>
  </security-constraint>
  
  
<filter>
   <filter-name>Content Security Policy</filter-name>
   <filter-class>org.lantern.CSPFilter</filter-class>
</filter>
<filter-mapping>
   <filter-name>Content Security Policy</filter-name>
   <url-pattern>/admin/*</url-pattern>
</filter-mapping>
<filter>
   <filter-name>CSRF Protection</filter-name>
   <filter-class>org.lantern.admin.rest.CSRFProtectionFilter</filter-class>
</filter>
<filter-mapping>
   <filter-name>CSRF Protection</filter-name>
   <url-pattern>/admin/rest/*</url-pattern>
</filter-mapping>
<filter>
  <filter-name>ExceptionFilter</filter-name>
  <filter-class>org.lantern.ExceptionFilter</filter-class>
</filter>
<filter-mapping>
  <filter-name>ExceptionFilter</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>

 <servlet>
  <servlet-name>SystemServiceServlet</servlet-name>
  <servlet-class>com.google.api.server.spi.SystemServiceServlet</servlet-class>
  <init-param>
   <param-name>services</param-name>
   <param-value/>
  </init-param>
 </servlet>
 <servlet-mapping>
  <servlet-name>SystemServiceServlet</servlet-name>
  <url-pattern>/_ah/spi/*</url-pattern>
 </servlet-mapping>
 
</web-app>
